{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["csvtoJS","x","document","querySelector","addEventListener","fr","FileReader","onloadend","e","r","result","split","map","forEach","m","join","console","log","ce","createElement","innerHTML","innerText","append","readAsText","files","window","onload","t","getElementById","textContent","alert","App","className","role","width","height","alt","src","type","accept","id","onClick","class","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iKA0IA,SAASA,IACP,IAAMC,EAAIC,SAASC,cAAc,SAEjCF,EAAEG,iBAAiB,UAAU,WAE3B,IAAMC,EAAK,IAAIC,WAEfD,EAAGE,UAAY,SAAAC,GAEb,IAAIC,EAAIJ,EAAGK,OAAOC,MAAM,MAAMC,KAAI,SAAAJ,GAChC,OAAOA,EAAEG,MAAM,QAGjBF,EAAEI,SAAQ,SAAAL,GAER,IAAIM,EAAIN,EAAEI,KAAI,SAAAJ,GACZ,MAAM,OAAN,OAAcA,EAAd,YACCO,KAAK,IAERC,QAAQC,IAAIH,GACZE,QAAQC,IAAIR,GAEZ,IAAMS,EAAKhB,SAASiB,cAAc,MAElCD,EAAGE,UAAYN,EAEM,KAAjBI,EAAGG,WACLnB,SAASC,cAAc,SAASmB,OAAOJ,OAK7Cb,EAAGkB,WAAWtB,EAAEuB,MAAM,OAxK1BR,QAAQC,IAAI,4BA6KZQ,OAAOC,OAAS,WACd,IAAIC,EAAIzB,SAAS0B,eAAe,aAE5BD,EACFA,EAAEvB,iBAAiB,UAAU,WAE3B,IAAIC,EAAK,IAAIC,WACbD,EAAGqB,OAAS,WACVxB,SAAS0B,eAAe,UAAUC,YAAcxB,EAAGK,QAErDL,EAAGkB,WAAWI,EAAEH,MAAM,OAGxBM,MAAM,kBAOKC,MA/Lf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAUC,KAAK,SAA9B,UACE,qBAAKC,MAAM,KAAKC,OAAO,MAAMC,IAAI,wBAC/BC,IAAI,6EAEN,gEAEA,qBAAKL,UAAU,cAIjB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAUC,KAAK,OAA9B,UAEE,oDAEA,uBAAOK,KAAK,OAAOC,OAAO,OAAOC,GAAG,aAAaC,QAASzC,IAC1D,uBAAOwC,GAAG,cAAV,SACE,+BACE,+CACA,4CACA,gDACA,qDACA,oDACA,4CACA,gEAYR,qBAAKE,MAAM,YAGX,qBAAKA,MAAM,UAAX,SACE,sBAAKA,MAAM,eAAX,UACE,sBAAKA,MAAM,OAAX,UACE,uBACA,uBACA,uBACA,uBACA,wDAEF,0BAASA,MAAM,YAAf,UAkCE,uBAAOJ,KAAK,OAAOK,KAAK,YAAYH,GAAG,cACvC,uBAEA,qBAAKA,GAAG,0BCjFPI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAAS0B,eAAe,SAM1BgB,EAAgB5B,QAAQC,KACxB2B,K","file":"static/js/main.a03dd809.chunk.js","sourcesContent":["import './App.css';\r\n\r\nconsole.log(\"Application has started.\");\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"toolbar\" role=\"banner\">\r\n        <img width=\"40\" height=\" 30\" alt=\"JPMC Logo PLaceholder\"\r\n          src=\"https://th.bing.com/th/id/OIP.42US39t41lKv7d-hqR7ImQHaE8?pid=ImgDet&rs=1\"></img>\r\n\r\n        <h2>Cassandra Clusters Application</h2>\r\n\r\n        <div className=\"spacer\"></div>\r\n\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"column1\">\r\n          <div className=\"content\" role=\"main\">\r\n\r\n            <h2>Table Information:</h2>\r\n\r\n            <input type=\"file\" accept=\".csv\" id=\"fileUpload\" onClick={csvtoJS} />\r\n            <table id=\"table-stats\">\r\n              <tr>\r\n                <th>Keyspace Name</th>\r\n                <th>Table Name</th>\r\n                <th>Num Partitions</th>\r\n                <th>Partition Row Stats</th>\r\n                <th>Column Definitions</th>\r\n                <th>Table Size</th>\r\n                <th>Partition Size Stats</th>\r\n              </tr>\r\n            </table>\r\n            {/* <input type=\"button\" id=\"upload\" value=\"Upload\" onclick={Upload} /> */}\r\n            {/* <div id=\"dvCSV\">\r\n              <div id=\"dvReplace\">\r\n              </div>\r\n            </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"column2\">\r\n\r\n        </div>\r\n        <div class=\"column3\">\r\n          <div class=\"sidebar-menu\">\r\n            <div class=\"logo\">\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <h2>Cluster Information</h2>\r\n            </div>\r\n            <section class=\"container\">\r\n              {/* <div class=\"one\">\r\n                <ul>\r\n                  <li>\r\n                    <p>Cluster Name:</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>Number of Tables:</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>User Generated Tables:</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>Cluster Size:</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"two\">\r\n                <ul>\r\n                  <li>\r\n                    <p>D7329D209426CC3CAF298FC6CBC2B52B6A707BFC</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>D7329D209426CC3CAF298FC6CBC2B52B6A707BFC</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>D7329D209426CC3CAF298FC6CBC2B52B6A707BFC</p>\r\n                  </li>\r\n                  <li>\r\n                    <p>D7329D209426CC3CAF298FC6CBC2B52B6A707BFC</p>\r\n                  </li>\r\n                </ul>\r\n              </div> */}\r\n\r\n              <input type=\"file\" name=\"inputfile\" id=\"inputfile\"></input>\r\n              <br></br>\r\n\r\n              <pre id=\"output\"></pre>\r\n\r\n            </section>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\n/*\r\nfunction Upload() {\r\n  var fileUpload = document.getElementById(\"fileUpload\");\r\n  var regex = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.csv|.txt)$/;\r\n  if (regex.test(fileUpload.value.toLowerCase())) {\r\n    if (typeof (FileReader) != \"undefined\") {\r\n      var reader = new FileReader();\r\n      reader.onload = function (e) {\r\n        var table = document.createElement(\"table\");\r\n        var rows = e.target.result.split(\"\\n\");\r\n        for (var i = 1; i < rows.length; i++) {\r\n          var cells = rows[i].split(\",\");\r\n          if (cells.length > 1) {\r\n            var row = table.insertRow(-1);\r\n            for (var j = 0; j < cells.length; j++) {\r\n              var cell = row.insertCell(-1);\r\n              cell.innerHTML = cells[j];\r\n            }\r\n          }\r\n        }\r\n        var dvCSV = document.getElementById(\"dvCSV\");\r\n        dvCSV.innerHTML = \"\";\r\n        dvCSV.appendChild(table);\r\n      }\r\n      reader.readAsText(fileUpload.value[0]);\r\n    } else {\r\n      alert(\"This browser does not support HTML5.\");\r\n    }\r\n  } else {\r\n    alert(\"Please upload a valid CSV file.\");\r\n  }\r\n}\r\n*/\r\n\r\nfunction csvtoJS() {\r\n  const x = document.querySelector(\"input\");\r\n\r\n  x.addEventListener(\"change\", () => {\r\n\r\n    const fr = new FileReader();\r\n\r\n    fr.onloadend = e => {\r\n\r\n      let r = fr.result.split(\"\\n\").map(e => {\r\n        return e.split(\",\")\r\n      });\r\n\r\n      r.forEach(e => {\r\n\r\n        let m = e.map(e => {\r\n          return `<td>${e}</td>`;\r\n        }).join(\"\");\r\n\r\n        console.log(m);\r\n        console.log(r);\r\n\r\n        const ce = document.createElement(\"tr\");\r\n\r\n        ce.innerHTML = m;\r\n\r\n        if (ce.innerText !== \"\") {\r\n          document.querySelector(\"table\").append(ce);\r\n        }\r\n\r\n      });\r\n    }\r\n    fr.readAsText(x.files[0]);\r\n\r\n  })\r\n}\r\n\r\nwindow.onload = function () {\r\n  var t = document.getElementById('inputfile');\r\n\r\n  if (t) {\r\n    t.addEventListener('change', () => {\r\n\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        document.getElementById('output').textContent = fr.result;\r\n      }\r\n      fr.readAsText(t.files[0]);\r\n    })\r\n  } else {\r\n    alert(\"ID not found.\");\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\nreportWebVitals();\r\n"],"sourceRoot":""}